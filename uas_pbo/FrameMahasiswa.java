/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uas_pbo;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.HashMap;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author LENOVO
 */
public class FrameMahasiswa extends javax.swing.JFrame {
    Connection conn;
    PreparedStatement pst;
    ResultSet rs;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/UAS_PBO";
    String user = "postgres";
    String password = "1234";
    InputStreamReader inputStreamReader = new InputStreamReader(System.in);
    BufferedReader input = new BufferedReader(inputStreamReader);

    /**
     * Creates new form FrameMahasiswa
     */
    public FrameMahasiswa() {
        initComponents();
        koneksi();
        tampil();
    }
     public void koneksi() {
        try {
            Class.forName(driver);
            conn = DriverManager.getConnection(koneksi, user, password);
            System.out.println("Koneksi berhasil!");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Koneksi gagal!");
        }
    }
      private void tampil() {
         EntityManager em = Persistence.createEntityManagerFactory("UAS_PBOPU").createEntityManager();
        
        try {
            Query query = em.createNamedQuery("Mahasiswa.findAll");
            List<Mahasiswa> resultList = query.getResultList();
            
            DefaultTableModel model = (DefaultTableModel) tblMahasiswa.getModel();
            model.setRowCount(0); 
            
            for (Mahasiswa m : resultList) {
                Object[] baris = new Object[5];
                baris[0] = m.getNim();
                baris[1] = m.getNama();
                baris[2] = m.getAlamat();
                baris[3] = m.getAsalsma();
                baris[4] = m.getNamaorangtua();
                model.addRow(baris);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            em.close();
        }
    }
 private void peringatan(String pesan) {
        JOptionPane.showMessageDialog(this, pesan);
    }
 
    public void clear() {
        tfNim.setText("");
        tfNama.setText("");
        tfAlamat.setText("");
        tfAsal.setText("");
        tfOrtu.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfNim = new javax.swing.JTextField();
        tfNama = new javax.swing.JTextField();
        tfAlamat = new javax.swing.JTextField();
        tfAsal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfOrtu = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMahasiswa = new javax.swing.JTable();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel1.setText("DATA MAHASISWA");

        jLabel2.setText("NIM");

        jLabel3.setText("Nama ");

        jLabel4.setText("Alamat");

        jLabel5.setText("Asal SMA");

        jLabel6.setText("Nama Orang Tua");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        tblMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NIM", "Nama", "Alamat", "Asal SMA", "Nama Orang Tua"
            }
        ));
        tblMahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMahasiswaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMahasiswa);

        btnExit.setText("Logout");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(tfNim)
                            .addComponent(tfNama)
                            .addComponent(tfAlamat)
                            .addComponent(tfAsal)
                            .addComponent(tfOrtu, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnInsert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCetak)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpload)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnExit)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnExit)
                .addGap(3, 3, 3)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfAsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfOrtu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(btnCetak)
                    .addComponent(btnUpload))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
     try {
    tfNim.setEditable(true);
    if (tfNim.getText().isEmpty() || tfNama.getText().isEmpty() || tfAlamat.getText().isEmpty() || tfAsal.getText().isEmpty() || tfOrtu.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Isi semua data!", "Input Error", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    EntityManager entityManager = Persistence.createEntityManagerFactory("UAS_PBOPU").createEntityManager();
    entityManager.getTransaction().begin();

    // Membuat instance Mahasiswa
    Mahasiswa mahasiswa = new Mahasiswa();
    mahasiswa.setNim(tfNim.getText());
    mahasiswa.setNama(tfNama.getText());
    mahasiswa.setAlamat(tfAlamat.getText());
    mahasiswa.setAsalsma(tfAsal.getText());
    mahasiswa.setNamaorangtua(tfOrtu.getText());

    // Menyimpan data mahasiswa ke database
    entityManager.persist(mahasiswa);
    entityManager.getTransaction().commit();

    // Memperbarui tampilan data
    tampil();
    JOptionPane.showMessageDialog(null, "Data Mahasiswa berhasil ditambahkan", "Sukses", JOptionPane.INFORMATION_MESSAGE);

} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
}

    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
     if (tfNim.getText().equals("") || tfNama.getText().equals("") || tfAlamat.getText().equals("") || tfAsal.getText().equals("") || tfOrtu.getText().equals("")) {
    JOptionPane.showMessageDialog(null, "Isi semua data");
} else {
    String nim, nama, alamat, asal, ortu;
    nim = tfNim.getText();
    nama = tfNama.getText();
    alamat = tfAlamat.getText();
    asal = tfAsal.getText();
    ortu = tfOrtu.getText();

    EntityManagerFactory emf = Persistence.createEntityManagerFactory("UAS_PBOPU");
    EntityManager em = emf.createEntityManager();
    em.getTransaction().begin();

    // Mencari data Mahasiswa berdasarkan NIM
    Mahasiswa mahasiswa = em.find(Mahasiswa.class, nim);
    if (mahasiswa == null) {
        JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
    } else {
        // Memperbarui data mahasiswa
        mahasiswa.setNama(nama);
        mahasiswa.setAlamat(alamat);
        mahasiswa.setAsalsma(asal);
        mahasiswa.setNamaorangtua(ortu);
        
        em.getTransaction().commit();
        tampil(); // Memperbarui data pada tampilan
        JOptionPane.showMessageDialog(null, "Data berhasil diupdate");
        
        em.close();
        emf.close();
        tfNim.setEditable(true);
    }
}

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    String nim = tfNim.getText();
if (nim.isEmpty()) {
    JOptionPane.showMessageDialog(null, "NIM diisi dulu yaa!", "Input Error", JOptionPane.WARNING_MESSAGE);
    return;
}
int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data dengan NIM: " + nim + "?",
        "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
if (confirm == JOptionPane.YES_OPTION) {
    EntityManager entityManager = Persistence.createEntityManagerFactory("UAS_PBOPU").createEntityManager();
    try {
        entityManager.getTransaction().begin();
        Mahasiswa mahasiswa = entityManager.find(Mahasiswa.class, nim);
        if (mahasiswa != null) {
            entityManager.remove(mahasiswa);
            entityManager.getTransaction().commit();
            tampil(); // Memperbarui tampilan data setelah penghapusan
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "NIM tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
            entityManager.getTransaction().rollback();
        }
    } catch (Exception e) {
        if (entityManager.getTransaction().isActive()) {
            entityManager.getTransaction().rollback();
        }
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    } finally {
        entityManager.close();
    }
}

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
     clear();
    tfNim.setEditable(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
      try {
         String reportPath = "src/uas_pbo/reportmahasiswa1.jasper";
         HashMap<String, Object> parameters = new HashMap<>();
         JasperPrint print = JasperFillManager.fillReport( reportPath, parameters, conn);
         JasperViewer viewer = new JasperViewer(print, false);
         viewer.setVisible(true);
     }catch (Exception e){
         JOptionPane.showMessageDialog(null, e.getMessage());
     }
     
    }//GEN-LAST:event_btnCetakActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        FrameLogin loginFrame = new FrameLogin();
        loginFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void tblMahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMahasiswaMouseClicked
        int row = tblMahasiswa.getSelectedRow();

        String nim = tblMahasiswa.getValueAt(row, 0).toString();
        String nama = tblMahasiswa.getValueAt(row, 1).toString();
        String alamat = tblMahasiswa.getValueAt(row, 2).toString();
        String asal = tblMahasiswa.getValueAt(row, 3).toString();
        String ortu = tblMahasiswa.getValueAt(row, 4).toString();

        tfNim.setText(nim);
        tfNama.setText(nama);
        tfAlamat.setText(alamat);
        tfAsal.setText(asal);
        tfOrtu.setText(ortu);
        tfNim.setEditable(false);
    }//GEN-LAST:event_tblMahasiswaMouseClicked

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
    JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
int returnValue = jfc.showOpenDialog(null);
EntityManagerFactory emf = Persistence.createEntityManagerFactory("UAS_PBOPU");
EntityManager em = emf.createEntityManager();

if (returnValue == JFileChooser.APPROVE_OPTION) {
    File filePilihan = jfc.getSelectedFile();
    System.out.println("File yang dipilih: " + filePilihan.getAbsolutePath());

    try (BufferedReader br = new BufferedReader(new FileReader(filePilihan))) {
        String baris;
        String pemisah = ";";

        while ((baris = br.readLine()) != null) {
            String[] data = baris.split(pemisah);
            if (data.length == 5) {
                String nim = data[0].trim();
                String nama = data[1].trim();
                String alamat = data[2].trim();
                String asal = data[3].trim();
                String ortu = data[4].trim();

                if (!nim.isEmpty() && !nama.isEmpty() && !alamat.isEmpty() && !asal.isEmpty() && !ortu.isEmpty()) {
                    em.getTransaction().begin();

                    Mahasiswa mahasiswa = new Mahasiswa();
                    mahasiswa.setNim(nim);
                    mahasiswa.setNama(nama);
                    mahasiswa.setAlamat(alamat);
                    mahasiswa.setAsalsma(asal);
                    mahasiswa.setNamaorangtua(ortu);

                    em.persist(mahasiswa);

                    em.getTransaction().commit();
                    JOptionPane.showMessageDialog(null, "Data Mahasiswa dengan NIM " + nim + " berhasil diinput.");
                    tampil(); // Update tampilan tabel jika ada
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak lengkap pada NIM " + nim);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Format data tidak valid pada baris: " + baris);
            }
        }
    } catch (FileNotFoundException ex) {
        Logger.getLogger(Mahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "File tidak ditemukan.");
    } catch (IOException ex) {
        Logger.getLogger(Mahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat membaca file.");
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "Format data tidak valid.");
    } finally {
        if (em.isOpen()) {
            em.close(); 
        }
        if (emf.isOpen()) {
            emf.close(); 
        }
    }
}

    }//GEN-LAST:event_btnUploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMahasiswa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMahasiswa;
    private javax.swing.JTextField tfAlamat;
    private javax.swing.JTextField tfAsal;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfNim;
    private javax.swing.JTextField tfOrtu;
    // End of variables declaration//GEN-END:variables
}
